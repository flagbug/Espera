<Controls:MetroWindow x:Class="Espera.View.Views.ShellView"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                      xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
                      xmlns:ViewModels="clr-namespace:Espera.View.ViewModels"
                      xmlns:Views="clr-namespace:Espera.View.Views"
                      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                      Title="Espera"
                      Width="800"
                      Height="600"
                      Closing="MetroWindowClosing"
                      Icon="/Espera;component/Images/ApplicationIcon.png"
                      MouseDown="MainWindowMouseDown"
                      ShowCloseButton="{Binding Path=CanModifyWindow}"
                      ShowMaxRestoreButton="{Binding Path=CanModifyWindow}"
                      ShowMinButton="{Binding Path=CanModifyWindow}"
                      WindowState="Maximized"
                      d:DataContext="{d:DesignInstance ViewModels:DesignTimeShellViewModel,
                                                       IsDesignTimeCreatable=True}"
                      mc:Ignorable="d">
    <Controls:MetroWindow.Style>
        <Style TargetType="{x:Type Controls:MetroWindow}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=CanModifyWindow}" Value="False">
                    <Setter Property="ResizeMode" Value="NoResize" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </Controls:MetroWindow.Style>
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Colours.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.AnimatedTabControl.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
            <Style x:Key="VolumeButtonStyle" TargetType="{x:Type Button}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Width="25"
                                    Height="25"
                                    Background="Transparent">
                                <ContentPresenter />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="IsTabStop" Value="False" />
            </Style>
            <Style x:Key="ArtistsHeaderStyle" TargetType="{x:Type TextBlock}">
                <Setter Property="FontSize" Value="48" />
                <Setter Property="FontFamily" Value="{DynamicResource HeaderFontFamily}" />
            </Style>
            <Style x:Key="VideoInfoHeaderStyle" TargetType="{x:Type TextBlock}">
                <Setter Property="FontSize" Value="48" />
                <Setter Property="FontFamily" Value="{DynamicResource HeaderFontFamily}" />
            </Style>
            <Style x:Key="PlaylistsHeaderStyle" TargetType="{x:Type TextBlock}">
                <Setter Property="FontSize" Value="48" />
                <Setter Property="FontFamily" Value="{DynamicResource HeaderFontFamily}" />
            </Style>
            <Style x:Key="ArtistInfoStyle" TargetType="{x:Type TextBlock}">
                <Setter Property="FontSize" Value="{DynamicResource ContentFontSize}" />
                <Setter Property="FontFamily" Value="{DynamicResource ContentFontFamily}" />
                <Setter Property="Opacity" Value="0.6" />
            </Style>
        </ResourceDictionary>
    </Window.Resources>
    <Window.InputBindings>
        <KeyBinding Key="Space" Command="{Binding PauseContinueCommand}" />
    </Window.InputBindings>
    <Controls:MetroWindow.WindowCommands>
        <Controls:WindowCommands>
            <Button Command="{Binding Path=ShowSettingsCommand}" Content="settings" />
        </Controls:WindowCommands>
    </Controls:MetroWindow.WindowCommands>
    <Controls:MetroWindow.Flyouts>
        <Controls:FlyoutsControl>
            <Controls:Flyout Header="settings"
                             IsOpen="{Binding Path=SettingsViewModel.ShowSettings}"
                             Position="Right">
                <Views:SettingsView Width="575" DataContext="{Binding Path=SettingsViewModel}" />
            </Controls:Flyout>
            <Controls:Flyout Header="Login"
                             IsOpen="{Binding Path=SettingsViewModel.ShowLogin}"
                             Position="Right">
                <StackPanel Width="200"
                            Margin="10, 0, 10, 0"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Center"
                            DataContext="{Binding Path=SettingsViewModel}">
                    <PasswordBox Name="LoginPasswordBox"
                                 VerticalContentAlignment="Center"
                                 Controls:TextboxHelper.Watermark="Administrator password"
                                 PasswordChanged="LoginPasswordChanged"
                                 x:FieldModifier="private" />
                    <Button Margin="0, 10, 0, 0"
                            Click="LoginButtonClick"
                            Content="Login"
                            IsEnabled="{Binding Path=CanLogin}" />
                    <TextBlock Margin="0, 10, 0, 0"
                               HorizontalAlignment="Center"
                               Foreground="Red"
                               Text="Wrong password!"
                               Visibility="{Binding Path=IsWrongPassword,
                                                    Converter={StaticResource BooleanToVisibilityConverter}}" />
                </StackPanel>
            </Controls:Flyout>
            <Controls:Flyout Header="Video"
                             IsOpen="{Binding Path=ShowVideoPlayer}"
                             Position="Right">
                <MediaElement x:Name="videoPlayer"
                              Width="{Binding RelativeSource={RelativeSource AncestorType=Controls:MetroWindow},
                                              Path=Width}"
                              LoadedBehavior="Manual"
                              MediaEnded="VideoPlayerMediaEnded" />
            </Controls:Flyout>
        </Controls:FlyoutsControl>
    </Controls:MetroWindow.Flyouts>
    <Grid x:Name="mainGrid" Margin="10">
        <Grid.LayoutTransform>
            <ScaleTransform ScaleX="{Binding Path=SettingsViewModel.Scaling}" ScaleY="{Binding Path=SettingsViewModel.Scaling}" />
        </Grid.LayoutTransform>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Grid Grid.Row="0" Height="30">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <StackPanel Grid.Column="0" Orientation="Horizontal">
                <Button Width="30" Padding="0">
                    <Button.Style>
                        <Style BasedOn="{StaticResource {x:Type Button}}" TargetType="{x:Type Button}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=IsPlaying}" Value="True">
                                    <Setter Property="Command" Value="{Binding Path=PauseCommand}" />
                                    <Setter Property="ToolTip" Value="Pause" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=IsPlaying}" Value="False">
                                    <Setter Property="Command" Value="{Binding Path=PlayCommand}" />
                                    <Setter Property="ToolTip" Value="Play" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                    <Image>
                        <Image.Style>
                            <Style TargetType="{x:Type Image}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=IsPlaying}" Value="True">
                                        <Setter Property="Source" Value="/Espera;component/Images/Pause.png" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=IsPlaying}" Value="False">
                                        <Setter Property="Source" Value="/Espera;component/Images/Play.png" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>
                </Button>
                <Button Margin="5, 0, 0, 0"
                        Command="{Binding Path=PreviousSongCommand}"
                        Padding="0"
                        ToolTip="Previous song">
                    <Image Source="/Espera;component/Images/Previous.png" />
                </Button>
                <Button Margin="5, 0, 0, 0"
                        Command="{Binding Path=NextSongCommand}"
                        Padding="0"
                        ToolTip="Next song">
                    <Image Source="/Espera;component/Images/Next.png" />
                </Button>
            </StackPanel>
            <StackPanel Grid.Column="1"
                        Margin="10, 0, 0, 0"
                        Orientation="Horizontal">
                <Button VerticalAlignment="Center"
                        Command="{Binding Path=MuteCommand}"
                        Style="{StaticResource VolumeButtonStyle}"
                        ToolTip="Mute">
                    <Image Source="/Espera;component/Images/Mute.png" />
                </Button>
                <Slider Width="200"
                        IsEnabled="{Binding Path=CanChangeVolume}"
                        IsMoveToPointEnabled="True"
                        Maximum="1"
                        Value="{Binding Path=Volume}" />
                <Button VerticalAlignment="Center"
                        Command="{Binding Path=UnMuteCommand}"
                        Style="{StaticResource VolumeButtonStyle}"
                        ToolTip="Unmute">
                    <Image Source="/Espera;component/Images/Unmute.png" />
                </Button>
            </StackPanel>
            <Slider Grid.Column="2"
                    Margin="5, 0, 0, 0"
                    IsEnabled="{Binding Path=CanChangeTime}"
                    IsMoveToPointEnabled="True"
                    Maximum="{Binding Path=TotalSeconds}"
                    Value="{Binding Path=CurrentSeconds}" />
            <StackPanel Grid.Column="3"
                        Margin="5, 0, 0, 0"
                        Orientation="Horizontal">
                <TextBlock VerticalAlignment="Center" Text="{Binding Path=CurrentTime, StringFormat=mm\\:ss}" />
                <TextBlock VerticalAlignment="Center" Text="/" />
                <TextBlock VerticalAlignment="Center" Text="{Binding Path=TotalTime, StringFormat=mm\\:ss}" />
            </StackPanel>
            <TextBox Grid.Column="4"
                     Width="150"
                     Margin="10, 0, 0, 0"
                     VerticalAlignment="Center"
                     VerticalContentAlignment="Center"
                     Controls:TextboxHelper.ClearTextButton="True"
                     Controls:TextboxHelper.Watermark="Search"
                     KeyUp="SearchTextBoxKeyUp"
                     Style="{DynamicResource SearchMetroTextBox}"
                     Text="{Binding Path=CurrentSongSource.SearchText,
                                    UpdateSourceTrigger=PropertyChanged}" />
            <ToggleButton Grid.Column="5"
                          Width="30"
                          Margin="5, 0, 0, 0"
                          IsChecked="{Binding Path=ShowVideoPlayer}"
                          Padding="0"
                          ToolTip="YouTube video player">
                <Image Source="/Espera;component/Images/VideoPlayer.png" />
            </ToggleButton>
        </Grid>
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="200" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid Grid.Column="0" Visibility="{Binding Path=IsLocal, Converter={StaticResource BooleanToVisibilityConverter}}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <TextBlock Grid.Row="0"
                           Style="{StaticResource ArtistsHeaderStyle}"
                           Text="artists" />
                <ListBox Grid.Row="1"
                         DataContext="{Binding Path=LocalViewModel}"
                         FocusVisualStyle="{x:Null}"
                         ItemsSource="{Binding Path=Artists}"
                         SelectedItem="{Binding Path=SelectedArtist}">
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <StackPanel Margin="0, 5, 0, 5" Orientation="Vertical">
                                <TextBlock Text="{Binding Path=Name}" />
                                <StackPanel Orientation="Horizontal">
                                    <StackPanel.Style>
                                        <Style TargetType="{x:Type StackPanel}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Path=IsAllArtists}" Value="True">
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </StackPanel.Style>
                                    <TextBlock Style="{StaticResource ArtistInfoStyle}" Text="{Binding Path=AlbumCount}" />
                                    <TextBlock>
                                        <TextBlock.Style>
                                            <Style BasedOn="{StaticResource ArtistInfoStyle}" TargetType="{x:Type TextBlock}">
                                                <Setter Property="Text" Value=" Albums, " />
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Path=AlbumCount}" Value="1">
                                                        <Setter Property="Text" Value=" Album, " />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                    <TextBlock Style="{StaticResource ArtistInfoStyle}" Text="{Binding Path=SongCount}" />
                                    <TextBlock>
                                        <TextBlock.Style>
                                            <Style BasedOn="{StaticResource ArtistInfoStyle}" TargetType="{x:Type TextBlock}">
                                                <Setter Property="Text" Value=" Songs" />
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Path=SongCount}" Value="1">
                                                        <Setter Property="Text" Value=" Song" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal">
                                    <StackPanel.Style>
                                        <Style TargetType="{x:Type StackPanel}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Path=IsAllArtists}" Value="False">
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </StackPanel.Style>
                                    <TextBlock Style="{StaticResource ArtistInfoStyle}" Text="{Binding Path=ArtistCount}" />
                                    <TextBlock>
                                        <TextBlock.Style>
                                            <Style BasedOn="{StaticResource ArtistInfoStyle}" TargetType="{x:Type TextBlock}">
                                                <Setter Property="Text" Value=" Artists" />
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Path=ArtistCount}" Value="1">
                                                        <Setter Property="Text" Value=" Artist" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                </StackPanel>
                            </StackPanel>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
            </Grid>
            <Grid Grid.Column="0" Visibility="{Binding Path=IsYoutube, Converter={StaticResource BooleanToVisibilityConverter}}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <TextBlock Grid.Row="0"
                           Style="{StaticResource VideoInfoHeaderStyle}"
                           Text="video info" />
                <Grid Grid.Row="1" DataContext="{Binding Path=YoutubeViewModel}">
                    <Grid Margin="5" DataContext="{Binding Path=SelectedSongs/}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Grid Grid.Row="0">
                            <Controls:ProgressRing Margin="0, 35, 0, 0" IsActive="True" />
                            <Image Grid.Row="0"
                                   Source="{Binding Path=Thumbnail}"
                                   Visibility="{Binding Path=HasThumbnail,
                                                        Converter={StaticResource BooleanToVisibilityConverter}}" />
                        </Grid>
                        <ScrollViewer Grid.Row="1"
                                      Margin="0, 10, 0, 0 "
                                      VerticalScrollBarVisibility="Auto">
                            <TextBlock Text="{Binding Path=Description}" TextWrapping="Wrap" />
                        </ScrollViewer>
                    </Grid>
                </Grid>
            </Grid>
            <Grid Grid.Column="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="{Binding Path=SongSourceHeight, Mode=TwoWay}" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="{Binding Path=PlaylistHeight, Mode=TwoWay}" />
                </Grid.RowDefinitions>
                <TabControl Grid.Row="0">
                    <TabItem Header="local" IsSelected="{Binding Path=IsLocal}">
                        <ListView ContextMenuOpening="SongListContextMenuOpening"
                                  DataContext="{Binding Path=LocalViewModel}"
                                  ItemsSource="{Binding Path=SelectableSongs}"
                                  ScrollViewer.CanContentScroll="True"
                                  SelectionChanged="SongListSelectionChanged">
                            <ListView.Style>
                                <Style BasedOn="{StaticResource {x:Type ListView}}" TargetType="{x:Type ListView}">
                                    <Setter Property="SelectionMode" Value="Extended" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=IsAdmin}" Value="False">
                                            <Setter Property="SelectionMode" Value="Single" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ListView.Style>
                            <ListView.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Command="{Binding Path=PlayNowCommand}"
                                              Header="Play Now"
                                              Visibility="{Binding Path=IsAdmin,
                                                                   Converter={StaticResource BooleanToVisibilityConverter}}" />
                                    <MenuItem Command="{Binding Path=AddToPlaylistCommand}" Header="Add to playlist" />
                                </ContextMenu>
                            </ListView.ContextMenu>
                            <ListView.ItemContainerStyle>
                                <Style BasedOn="{StaticResource {x:Type ListViewItem}}" TargetType="{x:Type ListViewItem}">
                                    <EventSetter Event="MouseDoubleClick" Handler="SongDoubleClick" />
                                    <EventSetter Event="KeyUp" Handler="SongKeyPressed" />
                                </Style>
                            </ListView.ItemContainerStyle>
                            <ListView.View>
                                <GridView>
                                    <GridViewColumn Width="{Binding Path=TitleColumnWidth, Mode=TwoWay}">
                                        <GridViewColumnHeader Click="SortLocalSongTitle" Content="Title" />
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <StackPanel Orientation="Horizontal">
                                                    <TextBlock Text="{Binding Path=Title}" TextTrimming="CharacterEllipsis" />
                                                </StackPanel>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn Width="{Binding Path=DurationColumnWidth, Mode=TwoWay}">
                                        <GridViewColumnHeader Click="SortLocalSongDuration" Content="Duration" />
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding Path=Duration, StringFormat=mm\\:ss}" TextTrimming="CharacterEllipsis" />
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn Width="{Binding Path=ArtistColumnWidth, Mode=TwoWay}">
                                        <GridViewColumnHeader Click="SortLocalSongArtist" Content="Artist" />
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding Path=Artist}" TextTrimming="CharacterEllipsis" />
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn Width="{Binding Path=AlbumColumnWidth, Mode=TwoWay}">
                                        <GridViewColumnHeader Click="SortLocalSongAlbum" Content="Album" />
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding Path=Album}" TextTrimming="CharacterEllipsis" />
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn Width="{Binding Path=GenreColumnWidth, Mode=TwoWay}">
                                        <GridViewColumnHeader Click="SortLocalSongGenre" Content="Genre" />
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding Path=Genre}" TextTrimming="CharacterEllipsis" />
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                </GridView>
                            </ListView.View>
                        </ListView>
                    </TabItem>
                    <TabItem Header="youtube" IsSelected="{Binding Path=IsYoutube}">
                        <Grid DataContext="{Binding Path=YoutubeViewModel}">
                            <ListView ContextMenuOpening="SongListContextMenuOpening"
                                      IsSynchronizedWithCurrentItem="True"
                                      ItemsSource="{Binding Path=SelectableSongs}"
                                      SelectionChanged="SongListSelectionChanged">
                                <ListView.Style>
                                    <Style BasedOn="{StaticResource {x:Type ListView}}" TargetType="{x:Type ListView}">
                                        <Setter Property="SelectionMode" Value="Extended" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=IsAdmin}" Value="False">
                                                <Setter Property="SelectionMode" Value="Single" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Path=IsSearching}" Value="True">
                                                <Setter Property="Visibility" Value="Hidden" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Path=IsNetworkUnavailable}" Value="True">
                                                <Setter Property="Visibility" Value="Hidden" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ListView.Style>
                                <ListView.ContextMenu>
                                    <ContextMenu IsOpen="{Binding Path=SelectedSong.IsContextMenuOpen}">
                                        <MenuItem Command="{Binding Path=PlayNowCommand}" Header="Play Now" />
                                        <MenuItem Command="{Binding Path=AddToPlaylistCommand}" Header="Add to playlist" />
                                        <Separator />
                                        <MenuItem ItemsSource="{Binding Path=SelectedSong.VideosToDownload}">
                                            <MenuItem.ItemTemplate>
                                                <DataTemplate>
                                                    <StackPanel Orientation="Horizontal">
                                                        <TextBlock Text="{Binding Path=VideoType, StringFormat=Type: \{0\}}" />
                                                        <TextBlock Margin="10, 0, 0, 0" Text="{Binding Path=Resolution, StringFormat=Resolution: \{0\}p}" />
                                                    </StackPanel>
                                                </DataTemplate>
                                            </MenuItem.ItemTemplate>
                                            <MenuItem.ItemContainerStyle>
                                                <Style TargetType="MenuItem">
                                                    <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu}, Path=DataContext.SelectedSong.DownloadVideoCommand}" />
                                                    <Setter Property="CommandParameter" Value="{Binding RelativeSource={RelativeSource Self}, Path=DataContext}" />
                                                </Style>
                                            </MenuItem.ItemContainerStyle>
                                            <MenuItem.Style>
                                                <Style BasedOn="{StaticResource {x:Type MenuItem}}" TargetType="MenuItem">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding Path=SelectedSong.IsLoadingContextMenu}" Value="True">
                                                            <Setter Property="Header" Value="Loading video infos..." />
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding Path=SelectedSong.IsLoadingContextMenu}" Value="False">
                                                            <Setter Property="Header" Value="Download video" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </MenuItem.Style>
                                        </MenuItem>
                                        <MenuItem ItemsSource="{Binding Path=SelectedSong.AudioToDownload}">
                                            <MenuItem.ItemTemplate>
                                                <DataTemplate>
                                                    <StackPanel Orientation="Horizontal">
                                                        <TextBlock Text="{Binding Path=AudioType, StringFormat=Type: \{0\}}" />
                                                        <TextBlock Margin="10, 0, 0, 0" Text="{Binding Path=AudioBitrate, StringFormat=Bitrate: \{0\} kbit/s}" />
                                                    </StackPanel>
                                                </DataTemplate>
                                            </MenuItem.ItemTemplate>
                                            <MenuItem.ItemContainerStyle>
                                                <Style TargetType="MenuItem">
                                                    <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu}, Path=DataContext.SelectedSong.DownloadAudioCommand}" />
                                                    <Setter Property="CommandParameter" Value="{Binding RelativeSource={RelativeSource Self}, Path=DataContext}" />
                                                </Style>
                                            </MenuItem.ItemContainerStyle>
                                            <MenuItem.Style>
                                                <Style BasedOn="{StaticResource {x:Type MenuItem}}" TargetType="MenuItem">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding Path=SelectedSong.IsLoadingContextMenu}" Value="True">
                                                            <Setter Property="Header" Value="Loading audio infos..." />
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding Path=SelectedSong.IsLoadingContextMenu}" Value="False">
                                                            <Setter Property="Header" Value="Download audio" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </MenuItem.Style>
                                        </MenuItem>
                                    </ContextMenu>
                                </ListView.ContextMenu>
                                <ListView.ItemContainerStyle>
                                    <Style BasedOn="{StaticResource {x:Type ListViewItem}}" TargetType="{x:Type ListViewItem}">
                                        <EventSetter Event="MouseDoubleClick" Handler="SongDoubleClick" />
                                        <EventSetter Event="KeyUp" Handler="SongKeyPressed" />
                                    </Style>
                                </ListView.ItemContainerStyle>
                                <ListView.View>
                                    <GridView>
                                        <GridViewColumn Width="{Binding Path=TitleColumnWidth, Mode=TwoWay}">
                                            <GridViewColumnHeader Click="SortYoutubeSongTitle" Content="Title" />
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate>
                                                    <StackPanel Orientation="Horizontal">
                                                        <TextBlock Margin="0, 0, 10, 0"
                                                                   FontWeight="Bold"
                                                                   Text="{Binding Path=DownloadProgress,
                                                                                  StringFormat=Downloading: \{0\}%}"
                                                                   Visibility="{Binding Path=IsDownloading,
                                                                                        Converter={StaticResource BooleanToVisibilityConverter}}" />
                                                        <TextBlock Margin="0, 0, 10, 0"
                                                                   FontWeight="Bold"
                                                                   Text="Download failed"
                                                                   Visibility="{Binding Path=DownloadFailed,
                                                                                        Converter={StaticResource BooleanToVisibilityConverter}}" />
                                                        <TextBlock Text="{Binding Path=Title}" TextTrimming="CharacterEllipsis" />
                                                    </StackPanel>
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>
                                        <GridViewColumn Width="{Binding Path=DurationColumnWidth, Mode=TwoWay}">
                                            <GridViewColumnHeader Click="SortYoutubeSongDuration" Content="Duration" />
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBlock Text="{Binding Path=Duration, StringFormat=mm\\:ss}" TextTrimming="CharacterEllipsis" />
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>
                                        <GridViewColumn Width="{Binding Path=RatingColumnWidth, Mode=TwoWay}">
                                            <GridViewColumnHeader Click="SortYoutubeSongRating" Content="Rating" />
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBlock Text="{Binding Path=Rating, StringFormat=\{0:0.0\}, TargetNullValue=n/a}" TextTrimming="CharacterEllipsis" />
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>
                                        <GridViewColumn Width="{Binding Path=ViewsColumnWidth, Mode=TwoWay}">
                                            <GridViewColumnHeader Click="SortYoutubeSongViews" Content="Views" />
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBlock Text="{Binding Path=Views, TargetNullValue=n/a}" TextTrimming="CharacterEllipsis" />
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>
                                        <GridViewColumn Width="{Binding Path=LinkColumnWidth, Mode=TwoWay}" Header="Link">
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBlock>
                                                        <Hyperlink Command="{Binding Path=OpenPathCommand}" Foreground="White">
                                                            <TextBlock Text="{Binding Path=Path}" TextTrimming="CharacterEllipsis" />
                                                        </Hyperlink>
                                                    </TextBlock>
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>
                                    </GridView>
                                </ListView.View>
                            </ListView>
                            <Grid Visibility="{Binding Path=IsSearching, Converter={StaticResource BooleanToVisibilityConverter}}">
                                <Controls:ProgressRing IsActive="True" />
                            </Grid>
                            <Grid Visibility="{Binding Path=IsNetworkUnavailable, Converter={StaticResource BooleanToVisibilityConverter}}">
                                <TextBlock HorizontalAlignment="Center"
                                           VerticalAlignment="Center"
                                           Text="Network is currently unavailable" />
                            </Grid>
                        </Grid>
                    </TabItem>
                </TabControl>
                <GridSplitter Grid.Row="1"
                              Height="3"
                              HorizontalAlignment="Stretch"
                              Background="Transparent"
                              Foreground="Transparent"
                              IsTabStop="False" />
                <Grid Grid.Row="2">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Grid Grid.Row="0" Margin="5, 0, 0, 0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid Grid.Column="0" Width="175">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <TextBlock Grid.Row="0"
                                       Style="{StaticResource PlaylistsHeaderStyle}"
                                       Text="playlists" />
                            <Grid Grid.Row="1"
                                  Height="30"
                                  Margin="0, 5, 0, 0"
                                  HorizontalAlignment="Stretch">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Button Grid.Column="0"
                                        Width="30"
                                        Command="{Binding Path=AddPlaylistCommand}"
                                        Padding="0"
                                        ToolTip="Add playlist">
                                    <Image Source="/Espera;component/Images/NewPlaylist.png" />
                                </Button>
                                <Button Grid.Column="1"
                                        Width="30"
                                        Command="{Binding Path=RemovePlaylistCommand}"
                                        IsEnabled="{Binding Path=CanSwitchPlaylist}"
                                        Padding="0"
                                        ToolTip="Remove playlist">
                                    <Image Source="/Espera;component/Images/Remove.png" />
                                </Button>
                                <Button Grid.Column="2"
                                        Width="30"
                                        Command="{Binding Path=EditPlaylistNameCommand}"
                                        Padding="0"
                                        ToolTip="Edit playlist name">
                                    <Image Source="/Espera;component/Images/EditPlaylistName.png" />
                                </Button>
                                <Button Grid.Column="3"
                                        Width="30"
                                        Command="{Binding Path=ShufflePlaylistCommand}"
                                        IsEnabled="{Binding Path=CanSwitchPlaylist}"
                                        Padding="0"
                                        ToolTip="Shuffle playlist">
                                    <Image Source="/Espera;component/Images/ShufflePlaylist.png" />
                                </Button>
                            </Grid>
                            <ListBox Grid.Row="2"
                                     Margin="0, 5, 0, 0"
                                     FocusVisualStyle="{x:Null}"
                                     IsEnabled="{Binding Path=CanSwitchPlaylist}"
                                     ItemsSource="{Binding Path=Playlists}"
                                     SelectedItem="{Binding Path=CurrentPlaylist}">
                                <ListBox.InputBindings>
                                    <KeyBinding Key="Delete" Command="{Binding Path=RemovePlaylistCommand}" />
                                </ListBox.InputBindings>
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <StackPanel Margin="0, 5, 0, 5" Orientation="Vertical">
                                            <Grid>
                                                <TextBox Height="25"
                                                         MinHeight="25"
                                                         Margin="0, 0, 5, 0"
                                                         VerticalAlignment="Center"
                                                         VerticalContentAlignment="Center"
                                                         GotFocus="PlaylistNameTextBoxGotFocus"
                                                         KeyUp="PlaylistNameTextBoxKeyUp"
                                                         LostFocus="PlaylistNameTextBoxLostFocus"
                                                         Padding="0"
                                                         Text="{Binding Path=Name,
                                                                        ValidatesOnDataErrors=True,
                                                                        UpdateSourceTrigger=PropertyChanged}">
                                                    <TextBox.Style>
                                                        <Style BasedOn="{StaticResource {x:Type TextBox}}" TargetType="{x:Type TextBox}">
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Path=EditName}" Value="False">
                                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding Path=EditName}" Value="True">
                                                                    <Setter Property="FocusManager.FocusedElement" Value="{Binding RelativeSource={x:Static RelativeSource.Self}}" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBox.Style>
                                                </TextBox>
                                                <TextBlock Text="{Binding Path=Name}">
                                                    <TextBlock.Style>
                                                        <Style TargetType="{x:Type TextBlock}">
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Path=EditName}" Value="True">
                                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>
                                            </Grid>
                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock Style="{StaticResource ArtistInfoStyle}" Text="{Binding Path=SongCount}" />
                                                <TextBlock>
                                                    <TextBlock.Style>
                                                        <Style BasedOn="{StaticResource ArtistInfoStyle}" TargetType="{x:Type TextBlock}">
                                                            <Setter Property="Text" Value=" Songs" />
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Path=SongCount}" Value="1">
                                                                    <Setter Property="Text" Value=" Song" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>
                                            </StackPanel>
                                        </StackPanel>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                        </Grid>
                        <ListView Grid.Column="1"
                                  Margin="5, 0, 0, 0"
                                  ContextMenuOpening="PlaylistContextMenuOpening"
                                  FocusVisualStyle="{x:Null}"
                                  ItemsSource="{Binding Path=CurrentPlaylist.Songs}"
                                  KeyUp="PlaylistKeyUp"
                                  ScrollViewer.CanContentScroll="True"
                                  SelectionChanged="PlaylistSelectionChanged">
                            <ListView.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Command="{Binding Path=PlayOverrideCommand}" Header="Play" />
                                    <MenuItem Command="{Binding Path=RemoveSelectedPlaylistEntriesCommand}" Header="Remove" />
                                </ContextMenu>
                            </ListView.ContextMenu>
                            <ListView.ItemContainerStyle>
                                <Style BasedOn="{StaticResource {x:Type ListViewItem}}" TargetType="{x:Type ListViewItem}">
                                    <EventSetter Event="MouseDoubleClick" Handler="PlaylistDoubleClick" />
                                </Style>
                            </ListView.ItemContainerStyle>
                            <ListView.View>
                                <GridView>
                                    <GridViewColumn Width="35">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <Grid>
                                                    <Image Width="25"
                                                           Height="25"
                                                           Source="/Espera;component/Images/CurrentSongIcon.png"
                                                           Visibility="{Binding Path=IsPlaying,
                                                                                Converter={StaticResource BooleanToVisibilityConverter}}" />
                                                    <Image Width="25"
                                                           Height="25"
                                                           Source="/Espera;component/Images/CorruptedSong.png"
                                                           ToolTip="Song is corrupted. Cannot play!"
                                                           Visibility="{Binding Path=IsCorrupted,
                                                                                Converter={StaticResource BooleanToVisibilityConverter}}" />
                                                </Grid>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn Width="{Binding Path=PlaylistTitleColumnWidth, Mode=TwoWay}" Header="Title">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding Path=Title}" TextTrimming="CharacterEllipsis" />
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn Width="{Binding Path=PlaylistDurationColumnWidth, Mode=TwoWay}" Header="Duration">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding Path=Duration, StringFormat=mm\\:ss}" TextTrimming="CharacterEllipsis" />
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn Width="{Binding Path=PlaylistArtistColumnWidth, Mode=TwoWay}" Header="Artist">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding Path=Artist}" TextTrimming="CharacterEllipsis" />
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn Width="{Binding Path=PlaylistAlbumColumnWidth, Mode=TwoWay}" Header="Album">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding Path=Album}" TextTrimming="CharacterEllipsis" />
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn Width="{Binding Path=PlaylistGenreColumnWidth, Mode=TwoWay}" Header="Genre">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding Path=Genre}" TextTrimming="CharacterEllipsis" />
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn Width="{Binding Path=PlaylistSourceColumnWidth, Mode=TwoWay}" Header="Source">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding Path=Source}" TextTrimming="CharacterEllipsis" />
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn Width="{Binding Path=PlaylistCachingProgressColumnWidth, Mode=TwoWay}">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <Grid>
                                                    <TextBlock VerticalAlignment="Center" Visibility="{Binding Path=ShowCaching, Converter={StaticResource BooleanToVisibilityConverter}}">
                                                        <TextBlock.Style>
                                                            <Style TargetType="{x:Type TextBlock}">
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding Path=HasCachingFailed}" Value="True">
                                                                        <Setter Property="Text" Value="Caching failed!" />
                                                                    </DataTrigger>
                                                                    <DataTrigger Binding="{Binding Path=HasCachingFailed}" Value="False">
                                                                        <Setter Property="Text" Value="{Binding Path=CacheProgress, StringFormat=Caching... \{0\}%, IsAsync=True}" />
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </TextBlock.Style>
                                                    </TextBlock>
                                                    <TextBlock Text="Streaming failed!" Visibility="{Binding Path=HasStreamingFailed, Converter={StaticResource BooleanToVisibilityConverter}}" />
                                                </Grid>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                </GridView>
                            </ListView.View>
                        </ListView>
                    </Grid>
                    <StackPanel Grid.Row="1"
                                HorizontalAlignment="Center"
                                Orientation="Horizontal">
                        <TextBlock Text="{Binding Path=CurrentPlaylist.SongsRemaining}" />
                        <TextBlock Text=" song" />
                        <TextBlock Text="s">
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=SongsRemaining}" Value="1">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                        <TextBlock Text=" remaining, with " />
                        <TextBlock Text="{Binding Path=CurrentPlaylist.TimeRemaining.TotalMinutes, FallbackValue=0, StringFormat=\{0:0.0\}}" />
                        <TextBlock Text=" minutes play time" />
                    </StackPanel>
                    <StackPanel Grid.Row="2"
                                Margin="0, 5, 0, 0"
                                HorizontalAlignment="Center"
                                Orientation="Horizontal"
                                Visibility="{Binding Path=ShowPlaylistTimeout,
                                                     Converter={StaticResource BooleanToVisibilityConverter}}">
                        <StackPanel.Style>
                            <Style TargetType="{x:Type StackPanel}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=DisplayTimeoutWarning}" Value="True">
                                        <DataTrigger.EnterActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity">
                                                        <LinearDoubleKeyFrame KeyTime="0:0:1" Value="0" />
                                                        <LinearDoubleKeyFrame KeyTime="0:0:2" Value="1" />
                                                        <LinearDoubleKeyFrame KeyTime="0:0:3" Value="0" />
                                                        <LinearDoubleKeyFrame KeyTime="0:0:4" Value="1" />
                                                    </DoubleAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </DataTrigger.EnterActions>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </StackPanel.Style>
                        <TextBlock Text="Remaining playlist timeout: " />
                        <TextBlock Text="{Binding Path=RemainingPlaylistTimeout, StringFormat=hh\\:mm\\:ss}" />
                    </StackPanel>
                </Grid>
            </Grid>
        </Grid>
    </Grid>
</Controls:MetroWindow>