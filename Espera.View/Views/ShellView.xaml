<Controls:MetroWindow x:Class="Espera.View.Views.ShellView"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                      xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
                      xmlns:Views="clr-namespace:Espera.View.Views"
                      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                      xmlns:designTime="clr-namespace:Espera.View.DesignTime"
                      xmlns:dialogs="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
                      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                      xmlns:view="clr-namespace:Espera.View"
                      Title="Espera"
                      Width="1024"
                      Height="768"
                      Closing="MetroWindowClosing"
                      GlowBrush="{DynamicResource AccentColorBrush}"
                      Icon="/Espera;component/Images/ApplicationIcon.png"
                      MouseDown="MainWindowMouseDown"
                      ShowCloseButton="{Binding Path=CanModifyWindow}"
                      ShowMaxRestoreButton="{Binding Path=CanModifyWindow}"
                      ShowMinButton="{Binding Path=CanModifyWindow}"
                      WindowState="Maximized"
                      d:DataContext="{d:DesignInstance designTime:DesignTimeShellViewModel,
                                                       IsDesignTimeCreatable=True}"
                      mc:Ignorable="d">
    <Controls:MetroWindow.Style>
        <Style TargetType="{x:Type Controls:MetroWindow}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=CanModifyWindow}" Value="False">
                    <Setter Property="ResizeMode" Value="NoResize" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </Controls:MetroWindow.Style>
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary
                    Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.AnimatedTabControl.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/FlatSlider.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml " />
                <ResourceDictionary Source="/Resources/Icons.xaml" />
                <ResourceDictionary Source="CommonResources.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
            <Style x:Key="VolumeButtonStyle" TargetType="{x:Type Button}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Width="25"
                                    Height="25"
                                    Background="Transparent">
                                <ContentPresenter />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="IsTabStop" Value="False" />
            </Style>
            <Style x:Key="PlaylistsHeaderStyle" TargetType="{x:Type TextBlock}">
                <Setter Property="FontSize" Value="48" />
                <Setter Property="FontFamily" Value="{StaticResource HeaderFontFamily}" />
            </Style>
            <Style x:Key="ArtistInfoStyle" TargetType="{x:Type TextBlock}">
                <Setter Property="FontSize" Value="{StaticResource ContentFontSize}" />
                <Setter Property="FontFamily" Value="{StaticResource ContentFontFamily}" />
                <Setter Property="Opacity" Value="0.6" />
            </Style>
        </ResourceDictionary>
    </Window.Resources>
    <Window.TaskbarItemInfo>
        <TaskbarItemInfo>
            <TaskbarItemInfo.ThumbButtonInfos>
                <ThumbButtonInfoCollection>
                    <ThumbButtonInfo x:Name="PauseContinueTaskbarButton"
                                     Command="{Binding PauseContinueCommand}"
                                     DismissWhenClicked="False" />
                    <ThumbButtonInfo Command="{Binding PreviousSongCommand}"
                                     Description="Previous Song"
                                     DismissWhenClicked="False"
                                     ImageSource="../Images/Previous.png" />
                    <ThumbButtonInfo Command="{Binding NextSongCommand}"
                                     Description="Next Song"
                                     DismissWhenClicked="False"
                                     ImageSource="../Images/Next.png" />
                </ThumbButtonInfoCollection>
            </TaskbarItemInfo.ThumbButtonInfos>
        </TaskbarItemInfo>
    </Window.TaskbarItemInfo>
    <Controls:MetroWindow.RightWindowCommands>
        <Controls:WindowCommands>
            <Button Command="{Binding Path=ShowSettingsCommand}" Content="settings" />
            <Button Command="{Binding Path=UpdateViewModel.Restart}"
                    ToolTip="Update &amp; Restart"
                    Visibility="{Binding Path=UpdateViewModel.ShouldRestart,
                                         Converter={StaticResource BooleanToVisibilityConverter}}">
                <Rectangle Width="12" Height="12">
                    <Rectangle.Fill>
                        <VisualBrush Stretch="Uniform">
                            <VisualBrush.Visual>
                                <Canvas Clip="F1 M 0,0L 76,0L 76,76L 0,76L 0,0">
                                    <Path Canvas.Left="24"
                                          Canvas.Top="17.75"
                                          Width="28"
                                          Height="39.25"
                                          Data="F1 M 34,57L 42,57L 42,32.25L 52,42.25L 52,31.75L 38,17.75L 24,31.75L 24,42.25L 34,32.25L 34,57 Z "
                                          Fill="{Binding Path=Foreground,
                                                         RelativeSource={RelativeSource AncestorType=Button}}"
                                          Stretch="Fill" />
                                </Canvas>
                            </VisualBrush.Visual>
                        </VisualBrush>
                    </Rectangle.Fill>
                </Rectangle>
            </Button>
        </Controls:WindowCommands>
    </Controls:MetroWindow.RightWindowCommands>
    <Controls:MetroWindow.Flyouts>
        <Controls:FlyoutsControl>
            <Controls:Flyout Header="settings"
                             IsOpen="{Binding Path=SettingsViewModel.ShowSettings}"
                             Position="Right"
                             Theme="Adapt">
                <Views:SettingsView Width="575" DataContext="{Binding Path=SettingsViewModel}" />
            </Controls:Flyout>
            <Controls:Flyout Header="Login"
                             IsOpen="{Binding Path=SettingsViewModel.ShowLogin}"
                             Position="Right"
                             Theme="Adapt">
                <StackPanel Width="200"
                            Margin="10, 0, 10, 0"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Center"
                            DataContext="{Binding Path=SettingsViewModel}">
                    <PasswordBox Name="LoginPasswordBox"
                                 VerticalContentAlignment="Center"
                                 Controls:TextBoxHelper.Watermark="Administrator password"
                                 PasswordChanged="LoginPasswordChanged"
                                 x:FieldModifier="private" />
                    <Button Margin="0, 10, 0, 0"
                            Click="LoginButtonClick"
                            Content="Login"
                            IsEnabled="{Binding Path=CanLogin}" />
                    <TextBlock Margin="0, 10, 0, 0"
                               HorizontalAlignment="Center"
                               Foreground="Red"
                               Text="Wrong password!"
                               Visibility="{Binding Path=IsWrongPassword,
                                                    Converter={StaticResource BooleanToVisibilityConverter}}" />
                </StackPanel>
            </Controls:Flyout>
            <Controls:Flyout Header="Video"
                             IsOpen="{Binding Path=ShowVideoPlayer}"
                             Position="Right"
                             Theme="Adapt">
                <MediaElement x:Name="videoPlayer"
                              Width="{Binding RelativeSource={RelativeSource FindAncestor,
                                                                             AncestorType=Controls:MetroWindow},
                                              Path=ActualWidth}"
                              LoadedBehavior="Manual" />
            </Controls:Flyout>
            <Controls:Flyout x:Name="TagEditorFlyout"
                             CloseCommand="{Binding ElementName=TagEditor,
                                                    Path=Content.DataContext.Cancel}"
                             Header="Tag Editor"
                             Position="Right"
                             Theme="Adapt">
                <ContentControl x:Name="TagEditor" Width="500" />
            </Controls:Flyout>
        </Controls:FlyoutsControl>
    </Controls:MetroWindow.Flyouts>
    <Grid x:Name="mainGrid" Margin="10">
        <Grid.LayoutTransform>
            <ScaleTransform ScaleX="{Binding Path=SettingsViewModel.Scaling}"
                            ScaleY="{Binding Path=SettingsViewModel.Scaling}" />
        </Grid.LayoutTransform>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Grid Grid.Row="0" Height="30">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <StackPanel Grid.Column="0" Orientation="Horizontal">
                <Button Width="30"
                        Command="{Binding Path=PauseContinueCommand}"
                        Padding="0">
                    <Button.Style>
                        <Style BasedOn="{StaticResource {x:Type Button}}" TargetType="{x:Type Button}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=IsPlaying}" Value="True">
                                    <Setter Property="ToolTip" Value="Pause" />
                                    <Setter Property="Content">
                                        <Setter.Value>
                                            <Rectangle Width="12" Height="12">
                                                <Rectangle.Fill>
                                                    <VisualBrush Stretch="Uniform"
                                                                 Visual="{StaticResource appbar_control_pause}" />
                                                </Rectangle.Fill>
                                            </Rectangle>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=IsPlaying}" Value="False">
                                    <Setter Property="ToolTip" Value="Play" />
                                    <Setter Property="Content">
                                        <Setter.Value>
                                            <Rectangle Width="12" Height="12">
                                                <Rectangle.Fill>
                                                    <VisualBrush Stretch="Uniform"
                                                                 Visual="{StaticResource appbar_control_play}" />
                                                </Rectangle.Fill>
                                            </Rectangle>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <Button Width="30"
                        Margin="5, 0, 0, 0"
                        Command="{Binding Path=PreviousSongCommand}"
                        Padding="0"
                        ToolTip="Previous song">
                    <Rectangle Width="12" Height="12">
                        <Rectangle.Fill>
                            <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_chevron_left}" />
                        </Rectangle.Fill>
                    </Rectangle>
                </Button>
                <Button Width="30"
                        Margin="5, 0, 0, 0"
                        Command="{Binding Path=NextSongCommand}"
                        Padding="0"
                        ToolTip="Next song">
                    <Rectangle Width="12" Height="12">
                        <Rectangle.Fill>
                            <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_chevron_right}" />
                        </Rectangle.Fill>
                    </Rectangle>
                </Button>
            </StackPanel>
            <StackPanel Grid.Column="1"
                        Margin="10, 0, 0, 0"
                        Orientation="Horizontal">
                <Button VerticalAlignment="Center"
                        Command="{Binding Path=MuteCommand}"
                        Style="{StaticResource VolumeButtonStyle}"
                        ToolTip="Mute">
                    <Rectangle Width="12" Height="12">
                        <Rectangle.Fill>
                            <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_sound_mute}" />
                        </Rectangle.Fill>
                    </Rectangle>
                </Button>
                <Slider Width="200"
                        VerticalAlignment="Center"
                        IsEnabled="{Binding Path=CanChangeVolume}"
                        IsMoveToPointEnabled="True"
                        Maximum="1"
                        Style="{StaticResource FlatSlider}"
                        Value="{Binding Path=Volume}" />
                <Button VerticalAlignment="Center"
                        Command="{Binding Path=UnMuteCommand}"
                        Style="{StaticResource VolumeButtonStyle}"
                        ToolTip="Unmute">
                    <Rectangle Width="12" Height="12">
                        <Rectangle.Fill>
                            <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_sound_3}" />
                        </Rectangle.Fill>
                    </Rectangle>
                </Button>
            </StackPanel>
            <Slider Grid.Column="2"
                    Width="Auto"
                    Margin="5, 0, 0, 0"
                    VerticalAlignment="Center"
                    IsEnabled="{Binding Path=CanChangeTime}"
                    IsMoveToPointEnabled="True"
                    Maximum="{Binding Path=TotalSeconds}"
                    Style="{StaticResource FlatSlider}"
                    Value="{Binding Path=CurrentSeconds}" />
            <StackPanel Grid.Column="3"
                        Margin="5, 0, 0, 0"
                        Orientation="Horizontal">
                <TextBlock VerticalAlignment="Center" Text="{Binding Path=CurrentTime}" />
                <TextBlock VerticalAlignment="Center" Text="/" />
                <TextBlock VerticalAlignment="Center" Text="{Binding Path=TotalTime}" />
            </StackPanel>
            <Grid Grid.Column="4" Width="350">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <TextBox Name="SearchTextBox"
                         Grid.Column="0"
                         Margin="10, 0, 0, 0"
                         VerticalAlignment="Center"
                         VerticalContentAlignment="Center"
                         Controls:TextBoxHelper.ClearTextButton="True"
                         Controls:TextBoxHelper.Watermark="Search"
                         Text="{Binding Path=CurrentSongSource.SearchText,
                                        UpdateSourceTrigger=PropertyChanged}" />
                <ToggleButton Grid.Column="1"
                              Width="30"
                              Margin="5, 0, 0, 0"
                              IsChecked="{Binding Path=ShowVideoPlayer}"
                              Padding="0"
                              ToolTip="YouTube video player">
                    <Rectangle Width="15" Height="15">
                        <Rectangle.Fill>
                            <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_youtube_play}" />
                        </Rectangle.Fill>
                    </Rectangle>
                </ToggleButton>
            </Grid>
        </Grid>
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="300" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid Grid.Column="0"
                  Visibility="{Binding Path=IsLocal, Converter={StaticResource BooleanToVisibilityConverter}}">
                <Views:ArtistsView DataContext="{Binding Path=LocalViewModel}" />
            </Grid>
            <Grid Grid.Column="0"
                  Visibility="{Binding Path=IsYoutube, Converter={StaticResource BooleanToVisibilityConverter}}">
                <Views:NetworkSongDetailView DataContext="{Binding Path=YoutubeViewModel}" Header="video info" />
            </Grid>
            <Grid Grid.Column="0"
                  Visibility="{Binding Path=IsSoundCloud, Converter={StaticResource BooleanToVisibilityConverter}}">
                <Views:NetworkSongDetailView DataContext="{Binding Path=SoundCloudViewModel}" Header="song info" />
            </Grid>
            <Grid Grid.Column="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="350" />
                </Grid.ColumnDefinitions>
                <TabControl Grid.Column="0">
                    <TabItem Header="my music" IsSelected="{Binding Path=IsLocal}">
                        <Views:LocalView DataContext="{Binding Path=LocalViewModel}" />
                    </TabItem>
                    <TabItem Header="youtube" IsSelected="{Binding Path=IsYoutube}">
                        <Views:YoutubeView DataContext="{Binding Path=YoutubeViewModel}" />
                    </TabItem>
                    <TabItem Header="soundcloud" IsSelected="{Binding Path=IsSoundCloud}">
                        <Views:SoundCloudView DataContext="{Binding Path=SoundCloudViewModel}" />
                    </TabItem>
                </TabControl>
                <Grid Grid.Column="1" Margin="5">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <TextBlock Grid.Row="0"
                               Style="{StaticResource PlaylistsHeaderStyle}"
                               Text="playlists" />
                    <Grid Grid.Row="1" Margin="0, 5, 0, 0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <ComboBox Grid.Column="0"
                                  IsEnabled="{Binding Path=CanAlterPlaylist}"
                                  ItemsSource="{Binding Path=Playlists}"
                                  SelectedItem="{Binding Path=CurrentPlaylist}">
                            <ComboBox.Style>
                                <Style BasedOn="{StaticResource {x:Type ComboBox}}" TargetType="ComboBox">
                                    <Setter Property="BorderBrush" Value="Transparent" />
                                    <Setter Property="Background" Value="Transparent" />
                                </Style>
                            </ComboBox.Style>
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel Margin="5">
                                        <Grid>
                                            <TextBox Margin="0, 0, 5, 0"
                                                     VerticalAlignment="Center"
                                                     VerticalContentAlignment="Center"
                                                     FontSize="16"
                                                     GotFocus="PlaylistNameTextBoxGotFocus"
                                                     KeyUp="PlaylistNameTextBoxKeyUp"
                                                     LostFocus="PlaylistNameTextBoxLostFocus"
                                                     Padding="0"
                                                     Text="{Binding Path=Name,
                                                                    ValidatesOnDataErrors=True,
                                                                    UpdateSourceTrigger=PropertyChanged}">
                                                <TextBox.Style>
                                                    <Style BasedOn="{StaticResource {x:Type TextBox}}"
                                                           TargetType="{x:Type TextBox}">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding Path=EditName}"
                                                                         Value="False">
                                                                <Setter Property="Visibility" Value="Collapsed" />
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding Path=EditName}" Value="True">
                                                                <Setter Property="FocusManager.FocusedElement"
                                                                        Value="{Binding RelativeSource={x:Static RelativeSource.Self}}" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </TextBox.Style>
                                            </TextBox>
                                            <TextBlock FontSize="16" Text="{Binding Path=Name}">
                                                <TextBlock.Style>
                                                    <Style TargetType="{x:Type TextBlock}">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding Path=EditName}" Value="True">
                                                                <Setter Property="Visibility" Value="Collapsed" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </TextBlock.Style>
                                            </TextBlock>
                                        </Grid>
                                        <StackPanel Margin="0, 5, 0, 0" Orientation="Horizontal">
                                            <TextBlock Style="{StaticResource ArtistInfoStyle}"
                                                       Text="{Binding Path=Songs.Count}" />
                                            <TextBlock>
                                                <TextBlock.Style>
                                                    <Style BasedOn="{StaticResource ArtistInfoStyle}"
                                                           TargetType="{x:Type TextBlock}">
                                                        <Setter Property="Text" Value=" Songs" />
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding Path=Songs.Count}" Value="1">
                                                                <Setter Property="Text" Value=" Song" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </TextBlock.Style>
                                            </TextBlock>
                                        </StackPanel>
                                    </StackPanel>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>
                        <Grid Grid.Column="1" Margin="5, 0, 0, 0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Grid.Resources>
                                <Style x:Key="PlaylistButtonStyle"
                                       BasedOn="{StaticResource {x:Type Button}}"
                                       TargetType="Button">
                                    <Setter Property="Width" Value="25" />
                                    <Setter Property="Padding" Value="0" />
                                    <Setter Property="BorderBrush" Value="Transparent" />
                                    <Setter Property="BorderThickness" Value="0" />
                                    <Setter Property="Background" Value="Transparent" />
                                </Style>
                            </Grid.Resources>
                            <Button Grid.Row="0"
                                    Grid.Column="0"
                                    Command="{Binding Path=AddPlaylistCommand}"
                                    Style="{StaticResource PlaylistButtonStyle}"
                                    ToolTip="Add playlist">
                                <Rectangle Width="15" Height="15">
                                    <Rectangle.Fill>
                                        <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_add}" />
                                    </Rectangle.Fill>
                                </Rectangle>
                            </Button>
                            <Button Grid.Row="0"
                                    Grid.Column="1"
                                    Command="{Binding Path=RemovePlaylistCommand}"
                                    Style="{StaticResource PlaylistButtonStyle}"
                                    ToolTip="Remove playlist">
                                <Rectangle Width="15" Height="15">
                                    <Rectangle.Fill>
                                        <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_delete}" />
                                    </Rectangle.Fill>
                                </Rectangle>
                            </Button>
                            <Button Grid.Row="1"
                                    Grid.Column="0"
                                    Command="{Binding Path=EditPlaylistNameCommand}"
                                    Style="{StaticResource PlaylistButtonStyle}"
                                    ToolTip="Edit playlist name">
                                <Rectangle Width="15" Height="15">
                                    <Rectangle.Fill>
                                        <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_edit}" />
                                    </Rectangle.Fill>
                                </Rectangle>
                            </Button>
                            <Button Grid.Row="1"
                                    Grid.Column="1"
                                    Command="{Binding Path=ShufflePlaylistCommand}"
                                    Style="{StaticResource PlaylistButtonStyle}"
                                    ToolTip="Shuffle playlist">
                                <Rectangle Width="15" Height="15">
                                    <Rectangle.Fill>
                                        <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_shuffle}" />
                                    </Rectangle.Fill>
                                </Rectangle>
                            </Button>
                        </Grid>
                    </Grid>
                    <ListBox x:Name="PlaylistListBox"
                             Grid.Row="2"
                             Margin="0, 10, 0, 0"
                             AllowDrop="True"
                             ContextMenuOpening="PlaylistContextMenuOpening"
                             Focusable="False"
                             ItemsSource="{Binding Path=CurrentPlaylist.Songs}"
                             KeyUp="PlaylistKeyUp"
                             ScrollViewer.CanContentScroll="True"
                             ScrollViewer.HorizontalScrollBarVisibility="Hidden"
                             SelectionChanged="PlaylistSelectionChanged"
                             SelectionMode="Extended"
                             VirtualizingPanel.IsContainerVirtualizable="True"
                             VirtualizingStackPanel.IsVirtualizing=" True"
                             VirtualizingStackPanel.VirtualizationMode="Recycling"
                             view:DragDropExtension.ScrollOnDragDrop="True">
                        <ListBox.ContextMenu>
                            <ContextMenu>
                                <MenuItem Command="{Binding Path=PlayOverrideCommand}" Header="Play" />
                                <MenuItem Command="{Binding Path=CurrentPlaylist.RemoveSelectedPlaylistEntriesCommand}"
                                          Header="Remove" />
                                <MenuItem Command="{Binding Path=CurrentPlaylist.MovePlaylistSongUpCommand}"
                                          Header="Move Up" />
                                <MenuItem Command="{Binding Path=CurrentPlaylist.MovePlaylistSongDownCommand}"
                                          Header="Move Down" />
                            </ContextMenu>
                        </ListBox.ContextMenu>
                        <ListBox.ItemContainerStyle>
                            <Style BasedOn="{StaticResource {x:Type ListBoxItem}}" TargetType="{x:Type ListBoxItem}">
                                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                                <EventSetter Event="MouseDoubleClick" Handler="PlaylistDoubleClick" />
                            </Style>
                        </ListBox.ItemContainerStyle>
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <StackPanel HorizontalAlignment="Stretch"
                                            Background="Transparent"
                                            Orientation="Vertical">
                                    <StackPanel.Triggers>
                                        <EventTrigger RoutedEvent="StackPanel.DragEnter">
                                            <BeginStoryboard>
                                                <Storyboard TargetProperty="Visibility"
                                                            TargetName="PlaylistItemDragIndicator">
                                                    <ObjectAnimationUsingKeyFrames>
                                                        <DiscreteObjectKeyFrame KeyTime="0"
                                                            Value="{x:Static Visibility.Visible}" />
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger>
                                        <EventTrigger RoutedEvent="StackPanel.DragLeave">
                                            <BeginStoryboard>
                                                <Storyboard TargetProperty="Visibility"
                                                            TargetName="PlaylistItemDragIndicator">
                                                    <ObjectAnimationUsingKeyFrames>
                                                        <DiscreteObjectKeyFrame KeyTime="0"
                                                            Value="{x:Static Visibility.Collapsed}" />
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger>
                                        <EventTrigger RoutedEvent="StackPanel.Drop">
                                            <BeginStoryboard>
                                                <Storyboard TargetProperty="Visibility"
                                                            TargetName="PlaylistItemDragIndicator">
                                                    <ObjectAnimationUsingKeyFrames>
                                                        <DiscreteObjectKeyFrame KeyTime="0"
                                                            Value="{x:Static Visibility.Collapsed}" />
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger>
                                    </StackPanel.Triggers>
                                    <Rectangle x:Name="PlaylistItemDragIndicator"
                                               Height="2"
                                               HorizontalAlignment="Stretch"
                                               Fill="{DynamicResource AccentColorBrush}"
                                               Visibility="Collapsed" />
                                    <Grid Margin="5, 10, 10, 10">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="25" />
                                            <ColumnDefinition />
                                        </Grid.ColumnDefinitions>
                                        <Grid Grid.Column="0">
                                            <Rectangle Width="15"
                                                       Height="15"
                                                       Visibility="{Binding Path=IsPlaying,
                                                                            Converter={StaticResource BooleanToVisibilityConverter}}">
                                                <Rectangle.Fill>
                                                    <VisualBrush Stretch="Uniform"
                                                                 Visual="{StaticResource appbar_sound_3}" />
                                                </Rectangle.Fill>
                                            </Rectangle>
                                            <Rectangle Width="15"
                                                       Height="15"
                                                       ToolTip="Song is corrupted. Cannot play!"
                                                       Visibility="{Binding Path=IsCorrupted,
                                                                            Converter={StaticResource BooleanToVisibilityConverter}}">
                                                <Rectangle.Fill>
                                                    <VisualBrush Stretch="Uniform"
                                                                 Visual="{StaticResource appbar_close}" />
                                                </Rectangle.Fill>
                                            </Rectangle>
                                        </Grid>
                                        <StackPanel Grid.Column="1" Margin="5, 0, 0, 0">
                                            <Grid VerticalAlignment="Top">
                                                <TextBlock MaxWidth="225"
                                                           HorizontalAlignment="Left"
                                                           FontSize="14"
                                                           Text="{Binding Path=Title}"
                                                           TextTrimming="CharacterEllipsis" />
                                                <TextBlock HorizontalAlignment="Right"
                                                           Style="{StaticResource ArtistInfoStyle}"
                                                           Text="{Binding Path=FormattedDuration}" />
                                            </Grid>
                                            <Grid Margin="0, 5, 0, 0" VerticalAlignment="Bottom">
                                                <TextBlock MaxWidth="175"
                                                           HorizontalAlignment="Left"
                                                           TextTrimming="CharacterEllipsis">
                                                    <TextBlock.Style>
                                                        <Style BasedOn="{StaticResource ArtistInfoStyle}"
                                                               TargetType="{x:Type TextBlock}">
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Path=IsYoutube}"
                                                                             Value="True">
                                                                    <Setter Property="Text" Value="YouTube" />
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding Path=IsYoutube}"
                                                                             Value="False">
                                                                    <Setter Property="Text"
                                                                            Value="{Binding Path=Artist}" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>
                                                <TextBlock HorizontalAlignment="Right"
                                                           Style="{StaticResource ArtistInfoStyle}"
                                                           Text="{Binding Path=Votes,
                                                                          StringFormat=\{0\} Votes}"
                                                           Visibility="{Binding RelativeSource={RelativeSource FindAncestor,
                                                                                                               AncestorType={x:Type Controls:MetroWindow}},
                                                                                Path=DataContext.ShowVotes,
                                                                                Converter={StaticResource BooleanToVisibilityConverter}}" />
                                            </Grid>
                                        </StackPanel>
                                    </Grid>
                                </StackPanel>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                    <StackPanel Grid.Row="3"
                                HorizontalAlignment="Center"
                                Orientation="Horizontal">
                        <TextBlock Text="{Binding Path=CurrentPlaylist.SongsRemaining}" />
                        <TextBlock Text=" song" />
                        <TextBlock Text="s">
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=CurrentPlaylist.SongsRemaining}" Value="1">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                        <TextBlock Text=" remaining, with " />
                        <TextBlock
                            Text="{Binding Path=CurrentPlaylist.TimeRemaining.TotalMinutes, FallbackValue=0, StringFormat=\{0:0.0\}}" />
                        <TextBlock Text=" minutes play time" />
                    </StackPanel>
                </Grid>
            </Grid>
        </Grid>
    </Grid>
</Controls:MetroWindow>